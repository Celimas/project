(* Grako Grammar for Tyler Marklyn's Deck Language *)


(* 'deck' is the start rule *)

deck = traits cards $ ;


(* Rules for deifning traits *)

traits = trait_names { trait_def } ;

trait_names = "Traits:" @+:trait_name {',' @+:trait_name } ; (* note, this could eventually allow for 0 traits somehow *)
trait_name = @:alphanumeric ;

trait_def = trait_name '-' typed_collection ;
typed_collection = ( "Boolean" )
                 | ( "Num" ':' numeric { ',' numeric } )
                 | ( "Any" ':' alphanumeric { ',' alphanumeric } ) ;


(* Rules for listing cards *)

cards = "Cards:" @+:card_rule { @+:card_rule } ;

card_rule = [ foreach_rule ] make_rule ';' ;

foreach_rule = 'Foreach' traits_rule ;
traits_rule = combine_rule | alphanumeric
combine_rule = "combine(" { alphanumeric { ',' alphanumeric } } ')' ;

make_rule = "make(" [ alphanumeric { ',' alphanumeric } ] ')' ;


(* helper rules *)
alphanumeric = /[a-z0-9]+/
numeric = /[0-9]+/