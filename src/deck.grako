(* Grako Grammar for Tyler Marklyn's Deck Language *)


(* 'deck' is the start rule *)

deck = traits:traits cardrules:cards $ ;


(* Rules for deifning traits *)

traits = "Traits" ':' { @+:trait_def } ;

trait_def = name:trait_name '-' typevals:typed_collection ;

trait_name = @:alphanumeric ;
typed_collection = ( type:"Boolean" )
                 | ( type:"Num" ':' vals+:numeric { ',' vals+:numeric } )
                 | ( type:"Any" ':' vals+:alphanumeric { ',' vals+:alphanumeric } ) ;


(* Rules for listing cards *)

cards = "Cards" ':' { @+:card_rule } ;

card_rule = [ foreach:foreach_rule ] make:make_rule ;

foreach_rule = 'Foreach' @:traits_rule ;
traits_rule = @:combine_rule | @:alphanumeric ;
combine_rule = "combination_of(" combine+:alphanumeric { ',' combine+:alphanumeric } ')' ;

(* Note, first argument is number to make *)
make_rule = "make(" num:numeric { ',' names+:alphanumeric } ')' ;


(* helper rules *)
alphanumeric = /[a-z0-9]+/ ;
numeric = /[0-9]+/ ;